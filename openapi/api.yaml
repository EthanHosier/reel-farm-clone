openapi: 3.0.3
info:
  title: Reel Farm API
  description: API for Reel Farm application
  version: 1.0.0
  contact:
    name: Ethan Hosier
    email: ethanjhosier@gmail.com

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: http://reel-farm-alb-1843168918.us-west-2.elb.amazonaws.com
    description: Production server

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the API
      operationId: getHealth
      tags:
        - Health
      responses:
        "200":
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /user:
    get:
      summary: Get current user account
      description: Retrieves the authenticated user's account information
      operationId: getUserAccount
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User account retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAccount"
        "401":
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: User account not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /hooks/generate:
    post:
      summary: Generate hooks for TikTok slideshow
      description: Generates creative hooks for a TikTok slideshow based on a prompt
      operationId: generateHooks
      tags:
        - Hooks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateHooksRequest"
      responses:
        "200":
          description: Hooks generated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateHooksResponse"
        "401":
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request - invalid request data or insufficient credits
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /subscription/create-checkout-session:
    post:
      summary: Create Stripe checkout session
      description: Creates a Stripe checkout session for subscription upgrade
      operationId: createCheckoutSession
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCheckoutSessionRequest"
      responses:
        "200":
          description: Checkout session created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutSessionResponse"
        "401":
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request - invalid request data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /subscription/customer-portal:
    post:
      summary: Create customer portal session
      description: Creates a Stripe customer portal session for subscription management
      operationId: createCustomerPortalSession
      tags:
        - Subscriptions
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCustomerPortalRequest"
      responses:
        "200":
          description: Customer portal session created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerPortalResponse"
        "401":
          description: Unauthorized - invalid or missing token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "400":
          description: Bad request - user not found or no Stripe customer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
  schemas:
    HealthResponse:
      type: object
      required:
        - message
        - status
        - port
      properties:
        message:
          type: string
          example: "Reel Farm API is healthy!"
        status:
          type: string
          example: "ok"
        port:
          type: string
          example: "3000"

    UserAccount:
      type: object
      required:
        - id
        - plan
        - plan_started_at
        - credits
        - created_at
        - updated_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user account
          example: "123e4567-e89b-12d3-a456-426614174000"
        plan:
          type: string
          description: User's subscription plan
          example: "free"
        plan_started_at:
          type: string
          format: date-time
          description: When the current plan started
          example: "2024-01-01T00:00:00Z"
        plan_ends_at:
          type: string
          format: date-time
          nullable: true
          description: When the current plan ends (null for free plans)
          example: "2024-12-31T23:59:59Z"
        credits:
          type: integer
          minimum: 0
          description: Number of credits available to the user
          example: 100
        billing_customer_id:
          type: string
          nullable: true
          description: External billing system customer ID
          example: "cus_1234567890"
        created_at:
          type: string
          format: date-time
          description: When the account was created
          example: "2024-01-01T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: When the account was last updated
          example: "2024-01-01T00:00:00Z"

    ErrorResponse:
      type: object
      required:
        - error
        - message
      properties:
        error:
          type: string
          description: Error type
          example: "validation_error"
        message:
          type: string
          description: Human-readable error message
          example: "Invalid user ID format"
        details:
          type: object
          description: Additional error details
          additionalProperties: true

    CreateCheckoutSessionRequest:
      type: object
      required:
        - price_id
        - success_url
        - cancel_url
      properties:
        price_id:
          type: string
          description: Stripe price ID for the subscription
          example: "price_1SKOuPLa4pEqShgojlivZTLc"
        success_url:
          type: string
          description: URL to redirect to after successful payment
          example: "https://reel-farm-clone-frontend.vercel.app/dashboard?success=true"
        cancel_url:
          type: string
          description: URL to redirect to if payment is canceled
          example: "https://reel-farm-clone-frontend.vercel.app/dashboard?canceled=true"

    CreateCustomerPortalRequest:
      type: object
      required:
        - return_url
      properties:
        return_url:
          type: string
          description: URL to redirect to after managing subscription
          example: "https://reel-farm-clone-frontend.vercel.app/dashboard"

    CheckoutSessionResponse:
      type: object
      required:
        - checkout_url
      properties:
        checkout_url:
          type: string
          description: Stripe checkout session URL
          example: "https://checkout.stripe.com/c/pay/cs_test_..."

    CustomerPortalResponse:
      type: object
      required:
        - portal_url
      properties:
        portal_url:
          type: string
          description: Stripe customer portal URL
          example: "https://billing.stripe.com/p/session_..."

    GenerateHooksRequest:
      type: object
      required:
        - prompt
        - num_hooks
      properties:
        prompt:
          type: string
          description: The topic or theme for generating hooks
          example: "Plants dying in my house"
        num_hooks:
          type: integer
          minimum: 1
          maximum: 10
          description: Number of hooks to generate
          example: 3

    GenerateHooksResponse:
      type: object
      required:
        - hooks
      properties:
        hooks:
          type: array
          items:
            type: string
          description: Array of generated hooks
          example:
            [
              "5 things I wish I knew before killing my plants",
              "um so why did it take a plant expert explaining to me that traditional planters are so expensive just to constantly water plants...",
              "fun fact you're probably spending way too much time and money on watering your plants when you don't need to",
            ]

tags:
  - name: Health
    description: Health check endpoints
  - name: Users
    description: User account management
  - name: Hooks
    description: Hook generation for TikTok slideshows
  - name: Subscriptions
    description: Subscription and billing management
